kind: pipeline
type: docker
name: default

steps:
- name: dependencies
  image: golang
  volumes:
  - name: deps
    path: /go
  commands: [go get -v -t -d ./...]

- name: build
  image: plugins/docker
  settings:
    repo: caesiumcloud/caesium-builder
    tags: ${DRONE_COMMIT_SHA:0:7}
    dockerfile: build/Dockerfile.build
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
  depends_on: [dependencies]

- name: unit test
  image: caesiumcloud/caesium-builder:${DRONE_COMMIT_SHA:0:7}
  volumes:
  - name: deps
    path: /go
  commands: [go test -race -coverprofile=coverage.txt -covermode=atomic ./...]
  depends_on: [build]

- name: containerize
  image: plugins/docker
  settings:
    repo: caesiumcloud/caesium
    tags: ${DRONE_COMMIT_SHA:0:7}
    dockerfile: build/Dockerfile
    build_args:
      - BUILDER_TAG=${DRONE_COMMIT_SHA:0:7}
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
  depends_on: [unit test]

- name: coverage
  image: plugins/codecov
  settings:
    token:
      from_secret: codecov_token
  depends_on: [unit test]

- name: caesium
  image: caesiumcloud/caesium:${DRONE_COMMIT_SHA:0:7}
  commands:
    - caesium start
  detach: true
  depends_on: [containerize]

- name: integration test
  image: golang
  volumes:
  - name: deps
    path: /go
  commands:
    - sleep 5
    - go test ./test/ -tags=integration
  environment:
    CAESIUM_HOST: caesium
  depends_on: [caesium]

services:
  - name: postgres
    image: postgres
    environment:
      POSTGRES_DB: caesium
      POSTGRES_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust

volumes:
- name: deps
  temp: {}
